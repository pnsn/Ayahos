# Earthworm-Related Parameters (REQUIRED)
[Earthworm]
MOD_ID: 193
INST_ID: 2
HB: 15
WAVE_RING: 1000
PICK_RING: 1005

## PULSEMOD_EW INPUTS - REQUIRED ##
[PulseMod_EW]
class: PULSE.module.coordinate.PulseMod_EW
meta_memory: 60
deep_debug: False
report_period: 1
report_fields: ['last']
connections: {'WAVE_RING': ${Earthworm:WAVE_RING}, 'PICK_RING': ${Earthworm:PICK_RING}}

# PyTorch Specific Parameters - Convenience Grouping #
[Torch]
device: 'cpu'
thread_limit: 8

# SeisBench Specific Parameters - Convenience Grouping #
[SeisBench]
model_class: 'seisbench.models.EQTransformer'
model_weights: ['pnw']
window_samples: 6000
window_overlap: 3000
blinding: (500,500)
batch_size: 128
stacking_method: 3

## MODULE SEQUENCE - REQUIRED ##
[Sequence]
# InRing - Get TYPE_TRACEBUF2 messages from WAVE_RING
inring: inringmod
# Buffer TYPE_TRACEBUF2 packets into longer (multi-minute) windows
wavebuff: wavebuffmod
# On-The-Fly Windowing - generate data
eqtwindow: eqtwindowmod
# Treat data gaps within traces & resample as needed
eqtdegap: eqtdegapmod
# Synchronize sampling times and intervals as needed
eqtsync: eqtsyncmod
# Fill missing (or excessively gappy) traces as needed
eqtchanfill: eqtchanfillmod
# Normalize traces
eqtnorm: eqtnormmod
# ML Detector/Picker
eqtpred: eqtpredmod
# Buffer predictions
predbuff: predbuffmod
# Run triggering on buffered predictions
bufftrig: bufftrigmod
# Convert triggers to TYPE_PICK2K message strings
pick2kout: pick2koutputmod
# OutRing - send TYPE_PICK2K messages to PICK_RING
outring: outringmod


### INDIVIDUAL MODULE DEFINITIONS - MUTABLE ###
# # e.g., minimal module parameter section
# [module_nickname]
# class: PULSE.module._base._BaseMod

## MODULE PARAMETER SECTIONS ##
# Input Ring Module (read TYPE_TRACEBUF2 messages from WAVE_RING)
[inringmod]
class: PULSE.module.transact.TransactMod
meta_memory: ${PulseMod_EW:meta_memory}
module: module
conn_name: 'WAVE_RING'
pulse_method: 'get_wave'
report_period: False

# Waveform Buffer Module
[wavebuffmod]
class: PULSE.module.buffer.BufferMod
meta_memory: ${PulseMod_EW:meta_memory}
max_length: 120
method: 1
max_pulse_size: 1000

# Windowing for EQTransformer inputs
[eqtwindowmod]
class: PULSE.module.window.WindowMod
meta_memory: ${PulseMod_EW:meta_memory}
reference_npts: ${SeisBench:window_samples}
reference_overlap: ${SeisBench:window_overlap}
reference_completeness_threshold: float(0.8)
other_completeness_threshold: float(0.75)
max_output_size: 10000

[eqtdegapmod]
class: PULSE.module.process.InPlaceMod
meta_memory: ${PulseMod_EW:meta_memory}
pclass: 'PULSE.data.mlwindow.MLWindow'
pmethod: 'treat_gaps'
pkwargs: {"filterkw": {"type":"bandpass","freqmin":1, "freqmax":45},
          "taperkw": {"max_percentage": None, "max_length": 0.06}}
max_pulse_size: 1000
max_output_size: 10000

[eqtsyncmod]
class: PULSE.module.process.InPlaceMod
meta_memory: ${PulseMod_EW:meta_memory}
pclass: 'PULSE.data.mlwindow.MLWindow'
pmethod: 'sync_to_reference'
pkwargs: {}
max_pulse_size: 1000
max_output_size: 10000

[eqtchanfillmod]
class: PULSE.module.process.InPlaceMod
meta_memory: ${PulseMod_EW:meta_memory}
pclass: 'PULSE.data.mlwindow.MLWindow'
pmethod: 'apply_fill_rule'
pkwargs: {"rule": "zeros"}
max_pulse_size: 1000
max_output_size: 10000

[eqtnormmod]
class: PULSE.module.process.InPlaceMod
meta_memory: ${PulseMod_EW:meta_memory}
pclass: 'PULSE.data.mlwindow.MLWindow'
pmethod: 'normalize_traces'
pkwargs: {'norm_type': 'peak'}
max_pulse_size: 1000
max_output_size: 10000

[eqtpredmod]
class: PULSE.module.predict.SeisBenchMod
meta_memory: ${PulseMod_EW:meta_memory}
mclass: ${SeisBench:model_class}
weight_names: ${SeisBench:model_weights}
devicetype: ${Torch:device}
compiled: False
max_pulse_size: 5
min_batch_size: 1
max_batch_size: ${SeisBench:batch_size}
thread_limit: ${Torch:thread_limit}

; [predfiltmod]
; class: PULSE.module.process.InPlaceMod
; pclass: "PULSE.data.mlstream.MLStream"
; pmethod: "fnpop"
; pkwargs: {'fnstr':'*.*.*.??D.*'}
; max_pulse_size: 1000
; max_output_size: 10000

[predbuffmod]
class: PULSE.module.buffer.BufferMod
meta_memory: ${PulseMod_EW:meta_memory}
max_length: 120
method: 3
blinding: ${SeisBench:blinding}

[bufftrigmod]
class: PULSE.module.trigger.BuffTriggerMod
meta_memory: ${PulseMod_EW:meta_memory}
trigger_level: float(0.21) # After Ni et al. (2023)
fold_threshold: 1
installation_id: ${Earthworm:INST_ID}
module_id: ${Earthworm:MOD_ID}
leading_mute: ${eqtwindowmod:reference_overlap}
pick_method: 'max'

[pick2koutputmod]
class: PULSE.module.process.OutputMod
meta_memory: ${PulseMod_EW:meta_memory}
pclass: "PULSE.data.mltrigger.Trigger"
pmethod: 'get_pick2k_msg'
oclass: "str"
pkwargs: {}

[outringmod]
class: PULSE.module.transact.TransactMod
meta_memory: ${PulseMod_EW:meta_memory}
module: module
conn_name: 'PICK_RING'
pulse_method: 'put_msg'
msg_type: 10
report_period: False

# Utility MOdules
[breakpointmod]
class: PULSE.module.util.BreakpointMod
meta_memory: ${PulseMod_EW:meta_memory}

[echomod]
class: PULSE.module.util.EchoMod
meta_memory: ${PulseMod_EW:meta_memory}
max_output_size: 300

[sinkmod]
class: PULSE.module._base._BaseMod
meta_memory: ${PulseMod_EW:meta_memory}
max_pulse_size: 300
max_output_size: 600